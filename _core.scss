// The Root Element
@mixin adjust-font-size($sizes) {
  $constant: 1.25;

  @each $size in $sizes {
    $ratio: ($size / 16px);
    $feature-prefix: min-;
    $horizontal: ($width-content * $constant * $ratio);

    @if ($ratio > 1.25) {
      $horizontal: ($width-full * $constant * $ratio);
    }

    $vertical: ($horizontal * (9 / 16));

    @if ($ratio < 1) {
      $feature-prefix: max-;
      $horizontal: ($width-content / $constant * $ratio);
      $vertical: ($horizontal * (3 / 2));
    }

    @media (#{$feature-prefix}width: $horizontal) and (#{$feature-prefix}height: $vertical){
      font-size: percentage($ratio);
    }
  }
}

html {
  font-size: 100%;

  @include adjust-font-size((18px, 21px, 24px));
}

// Sections
body {
  @extend %font-body;

  line-height: $line-height-default;
  color: $color-fg-body;
  background-color: $color-bg-body;
}

@mixin heading {
  line-height: $line-height-heading;
  color: $color-fg-heading;
}

h1 {
  @include heading;

  margin: ($margin-primary-heading / $ratio-h1) 0 0 0;
  font-size: percentage($ratio-h1);
}

h2 {
  @include heading;

  margin: ($margin-heading / $ratio-h2) 0 0 0;
  font-size: percentage($ratio-h2);
}

// Grouping Content
p {
  @extend %margin-default;

  h2 + & {
    @extend %margin-mini;
  }
}

hr {
  @extend %ir;
  @extend %margin-default;

  margin-right: auto;
  margin-left: auto;
  border: none;
  clear: both;
  width: $width-hr;
  height: $height-hr;
  background-color: transparent;

  &::before {
    background-image: $image-asterisk;
    background-repeat: repeat-x;
  }
}

pre {
  @extend %font-code;
  @extend %margin-default;

  padding: $width-gap;
  border-width: 1px 0;
  border-style: dashed;
  border-color: $color-border-pre;
  clear: both;
  line-height: $line-height-pre;
  color: $color-fg-pre;
  background-color: $color-bg-pre;
  font-size: em($ratio-code);
  word-wrap: break-word;
  overflow-wrap: break-word;
}

blockquote {
  margin: 0;
  border-left: $width-border-blockquote solid $color-border-blockquote;
  padding-left: $indent-blockquote;
  color: $color-fg-blockquote;

  + figcaption {
    @extend %margin-mini;
  }

  @media (min-width: $breakpoint-full) {
    + figcaption {
      position: static;
      width: auto;
    }
  }
}

ul,
ol {
  @extend %margin-default;

  padding: 0 0 0 $indent-default;
  clear: both;

  ul,
  ol {
    margin-top: 0;
  }
}

dl {
  @extend %margin-default;

  clear: both;

  dt {
    color: $color-fg-dt;
    font-weight: bold;
  }

  dd {
    margin-left: $indent-default;
  }

  dl {
    margin-top: 0;
  }
}

figure {
  @extend %margin-default;

  position: relative;
  text-align: center;

  @media (min-width: $breakpoint-content) {
    text-align: left;
  }
}

figcaption {
  @extend %hanging-block;

  @media (min-width: $breakpoint-full) {
    top: 0;

    &:last-child {
      top: auto;
      bottom: 0;
    }
  }
}

// Text-level Semantics
a {
  color: $color-fg-link;
  text-decoration: none;

  &:hover,
  &:focus,
  &:active {
    color: $color-fg-link-hover;
  }

  h1 &,
  h2 & {
    color: inherit;

    &:hover {
      color: $color-fg-link;
    }
  }

  section > p &,
  article > p &,
  div[itemprop="articleBody"] > p & {
    @extend %auto-breaking;

    text-decoration: underline;
  }
}

em {
  color: $color-fg-em;
  font-style: normal;
  font-weight: bold;
}

strong {
  color: $color-fg-strong;
  border-bottom: 1px dashed;
}

cite {
  font-style: normal;
}

q {
  quotes: none;

  &::before {
    content: "\300c"; // Left Corner Bracket
  }

  &::after {
    content: "\300d"; // Right Corner Bracket
  }
}

abbr {
  @extend %auto-breaking;

  font-size: 87.5%;
  letter-spacing: 0.063em;
  cursor: help;
}

code,
var,
samp,
kbd {
  @extend %font-code;
  @extend %auto-breaking;

  font-size: em($ratio-code);

  pre & {
    font-size: 1em;
  }
}

mark {
  color: inherit;
  background-color: $color-bg-mark;
}

// Edits
ins {
  text-decoration: none;
}

del {
  text-decoration: line-through;
}

// Embedded Content
@import "./bower_components/hail2u-scss-partials/vendor-extension";

img {
  @include box-sizing(border-box);

  max-width: 100%;
  height: auto;

  figure & {
    border: $width-border-img solid $color-bg-img;
    vertical-align: text-bottom;
    background-color: $color-bg-img;
  }
}

// Tabular Data
table {
  @extend %margin-default;

  display: block;
  clear: both;
  max-width: 100%;
  overflow-x: auto;
  table-layout: fixed;

  th,
  td {
    padding: 0.5em;
    border: 1px solid $color-border-table;
    vertical-align: top;
    white-space: nowrap;
  }

  th {
    color: $color-fg-th;
    background-color: $color-bg-th;
    text-align: left;
  }

  td {
    background-color: $color-bg-td;
  }

  @media not screen {
    display: table;
  }
}
