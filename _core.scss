// Root
@mixin adjust-font-size($sizes) {
  $threshold: 1.2;

  @each $size in $sizes {
    $feature-prefix: min-;
    $ratio: ($size / 16px);
    $horizontal: ($width-content--with-gap * pow($ratio, 2));
    $vertical: ($horizontal / 2);

    @if ($ratio < 1) {
      $feature-prefix: max-;
      $vertical: ($horizontal * (3 / 2));
    }

    @if ($ratio > $threshold) {
      $horizontal: ($width-full--with-gap * pow($ratio, 2) * $threshold);
      $vertical: ($horizontal / 2);
    }

    @media (#{$feature-prefix}width: $horizontal) and (#{$feature-prefix}height: $vertical) {
      font-size: percentage($ratio);
    }
  }
}

html {
  font-size: 100%;

  @include adjust-font-size($font-sizes_html);
}

// Sections
body {
  line-height: $line-height;
  color: $color-fg_body;
  background-color: $color-bg_body;
  font-family: $font-stack_body;
}

@mixin heading {
  line-height: $line-height_heading;
  color: $color-fg_heading;
}

h1 {
  @include heading;

  margin: ($margin_heading--primary / $ratio_heading) 0 0 0;
  font-size: em($ratio_heading);
}

h2 {
  @include heading;

  margin: ($margin_heading / $ratio_sub-heading) 0 0 0;
  font-size: em($ratio_sub-heading);
}

// Grouping Content
p {
  @extend %margin;

  h2 + & {
    margin-top: $margin--mini;
  }
}

hr {
  @extend %ir;
  @extend %margin;

  margin-right: auto;
  margin-left: auto;
  border: none;
  clear: both;
  width: $width_hr;
  height: $height_hr;
  background-color: transparent;

  &::before {
    background-image: $image_asterisk;
    background-repeat: repeat-x;
  }
}

pre {
  margin: ($margin / $ratio_code) (- $width-gap / $ratio_code) 0;
  padding: ($width-gap / $ratio_code);
  clear: both;
  line-height: $line-height_code;
  color: $color-fg_pre;
  background-color: $color-bg_pre;
  font-family: $font-stack_code;
  font-size: em($ratio_code);
  word-wrap: break-word;
  overflow-wrap: break-word;

  h2 + & {
    margin-top: ($margin--mini / $ratio_code);
  }
}

blockquote {
  margin: 0;
  border-left: $width-border_blockquote solid $color-border_blockquote;
  padding-left: $width-gap;
  color: $color-fg_blockquote;

  + figcaption:last-child {
    margin-top: 0;
    border-left: $width-border_blockquote solid $color-border_blockquote;
    padding-top: $margin--mini;
    padding-left: $width-gap;
  }

  @media (min-width: ($breakpoint-full)) {
    margin-left: (- ($width-gap + $width-border_blockquote));

    + figcaption:last-child {
      margin-left: (- ($width-gap + $width-border_blockquote));
      margin-right: 0;
      padding-bottom: 0;
      border-bottom: 0;
      position: static;
      width: auto;
    }
  }
}

ul,
ol {
  @extend %margin;

  padding: 0 0 0 $indent;
  clear: both;

  h2 + & {
    margin-top: $margin--mini;
  }

  ul,
  ol {
    margin-top: 0;
    padding-left: $indent;
  }

  @media (min-width: ($breakpoint-full)) {
    padding-left: 0;
  }
}

dl {
  @extend %margin;

  clear: both;

  h2 + & {
    margin-top: $margin--mini;
  }

  dt {
    color: $color-fg_dt;
    font-weight: bold;
  }

  dd {
    margin-left: $indent;
  }

  dl {
    margin-top: 0;
  }
}

figure {
  @extend %margin;

  position: relative;

  h2 + & {
    margin-top: $margin--mini;
  }
}

figcaption {
  @extend %hanging-block;

  @media (min-width: $breakpoint-full) {
    padding-top: ($width-border_img - $height-border_figcaption);
    border-top: $height-border_figcaption solid $color-border_figcaption;
    top: 0;

    &:last-child {
      padding-top: 0;
      padding-bottom: ($width-border_img - $height-border_figcaption);
      border-top: 0;
      border-bottom: $height-border_figcaption solid $color-border_figcaption;
      top: auto;
      bottom: 0;
    }
  }
}

// Text-level Semantics
a {
  color: $color-fg_link;
  text-decoration: none;

  &:hover,
  &:focus,
  &:active {
    color: $color-fg_link--hover;
  }

  h1 &,
  h2 & {
    color: inherit;

    &:hover {
      color: $color-fg_link;
    }
  }
}

em {
  @extend %auto-breaking;

  color: $color-fg_em;
  font-style: normal;
  font-weight: bold;
}

strong {
  @extend %auto-breaking;

  color: $color-fg_strong;
  border-bottom: 1px dashed;
}

cite {
  font-style: normal;
}

q {
  quotes: none;

  &::before {
    content: "\300c"; // Left Corner Bracket
  }

  &::after {
    content: "\300d"; // Right Corner Bracket
  }
}

abbr {
  @extend %auto-breaking;

  font-size: 87.5%;
  letter-spacing: 0.063em;
  cursor: help;
}

code,
var,
samp,
kbd {
  @extend %auto-breaking;

  font-family: $font-stack_code;
  font-size: em($ratio_code);

  pre & {
    font-size: 1em;
  }
}

mark {
  @extend %auto-breaking;

  background-color: $color-bg_mark;
}

// Edits
ins {
  text-decoration: none;
}

del {
  text-decoration: line-through;
}

// Embedded Content
@import "./bower_components/hail2u-scss-partials/vendor-extension";

img {
  @include box-sizing(border-box);

  max-width: 100%;
  height: auto;

  figure & {
    border: $width-border_img solid $color-bg_img;
    vertical-align: bottom;
    background-color: $color-bg_img;
  }
}

// Tabular Data
table {
  @extend %margin;

  display: block;
  clear: both;
  max-width: 100%;
  overflow-x: auto;
  table-layout: fixed;

  h2 + & {
    margin-top: $margin--mini;
  }

  th,
  td {
    padding: 0.5em;
    border: 1px solid $color-border_table;
    vertical-align: top;
    white-space: nowrap;
  }

  th {
    color: $color-fg_th;
    background-color: $color-bg_th;
    text-align: left;
  }

  td {
    background-color: $color-bg_td;
  }

  @media not screen {
    display: table;
  }
}
